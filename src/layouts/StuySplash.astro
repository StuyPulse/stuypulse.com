---
import type { MarkdownLayoutProps } from "astro";
import type { PresentationType } from "@types";

type Props = MarkdownLayoutProps<{
  year: string;
  presentations: PresentationType[];
  playlist?: string;
}>;

const { frontmatter } = Astro.props;
---

<style></style>

<h2>{"Stuy Splash  " + frontmatter.year}</h2>
<slot class="content" />

<div class="row">
  <div class="col-12 col-lg-9 order-1 order-lg-0">
    <ul class="list-group list-group-flush">
      {
        frontmatter.presentations.map((presentation: PresentationType) => (
          <li class="list-group-item">
            <h4 class="d-inline">{presentation.title + " "}</h4>
            <p class="d-inline-block text-muted mb-2">
              {" with " + presentation.presenter}
            </p>
            <br />
            {presentation.url && (
              <a href={presentation.url} class="mb-2">
                Presentation
              </a>
            )}
            {presentation.description && <p>{presentation.description}</p>}
          </li>
        ))
      }
    </ul>
  </div>
  <div class="col-sm-10 col-lg-3 order-0 order-lg-1">
    <h2>Links</h2>
    <ul>
      {
        frontmatter.playlist ? (
          <li>
            <a href={frontmatter.playlist}>Video Recording Playlist</a>
          </li>
        ) : (
          <li>No video recording playlist found :&#40;</li>
        )
      }
    </ul>
  </div>
</div>
