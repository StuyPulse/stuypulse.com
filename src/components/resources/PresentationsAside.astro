---
import { CollectionEntry, getCollection } from "astro:content";

const history = await getCollection("stuysplash");
const sortedHistory: CollectionEntry<"stuysplash">[] = [];
history.map((entry) => sortedHistory.unshift(entry));
export interface Props {
  activeYear: string;
}

const year = Astro.props;
---
<style>
  p {
    margin-bottom: 0;
    padding: 4px;
  }

  /* a {
    color: black;
  } */

  /* a:hover {
    color: black;
  } */
  
  nav a {
    margin-right: 0px;
  }

  .row {
    display: flex;
    vertical-align: middle;
  }

  .row:hover {
    background-color: #eee;
  }

  .activeYear {
    background-color: rgb(224,0,0);
    color:white;
  }

  .activeYear:hover {
    background-color: rgb(200,0,0);
    color:#eee;
  }
</style>

<div class="accordion accordion-flush">
  <div class="accordion-item">
    <h2 class="accordion-header">
      <button
        class="accordion-button collapsed m-0 p-0 text-center fs-3 d-md-none text-muted"
        type="button"
        data-bs-toggle="collapse"
        data-bs-target="#years"
        aria-expanded="false"
        aria-controls="years"
        style="color: #e00;"
      >
        Past Years
      </button>
      <p
        class="m-0 text-muted text-center d-none d-md-block"
        style="font-size: 18px;"
      >
        Past Years
      </p>
    </h2>
    <div id="years" class="accordion-collapse collapse">
      <div class="accordion-body pt-1">
        <hr class="mt-1 mb-2" />

        {
          sortedHistory.map((entry) => (
            <a href={"/resources/stuysplash/"+entry.slug}>
              <div class={"row no-gutters align-items-center" + (year.activeYear == entry.slug ? " activeYear" : "")}>
                <p class="mb-0">{entry.slug}</p>
              </div>
            </a>
          ))
        }
      </div>
    </div>
  </div>
</div>

<hr />

<script defer>
  const years = document.getElementById("years");

  function responsiveDropdown() {
    if (window.innerWidth > 767) years.classList.add("show");
    else years.classList.remove("show");
  }

  responsiveDropdown();
  window.addEventListener("resize", (e) => responsiveDropdown(), true);
</script>
